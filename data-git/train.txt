Content-Type: text/enriched
Text-Width: 70

<<P>
<<A NAME="ACL2"><</A> <</P>
<<DT><<B><x-nlu-name><x-color><x-nlu-name>ACL2</x-nlu-name></x-color></x-nlu-name><</B><<DD><<P>
<<UL>
<<LI>Web site: 
<<A HREF="<x-nlu-url><x-color><x-nlu-url>http://www.cliki.net/ACL2</x-nlu-url></x-color></x-nlu-url>">www.cliki.net/ACL2<</A><</LI>
<</UL>
<</P>
<x-nlu-description><<P><x-nlu-description><x-color>ACL2 (A Computational Logic for Applicative Common Lisp) is a theorem
prover for industrial applications. It is both a mathematical logic and
a system of tools for constructing proofs in the logic.  ACL2 works
with GCL (GNU Common Lisp).</x-color></x-nlu-description><</P></x-nlu-description>

<<P>
<<A NAME="AI Kernel"><</A> <</P>
<<DT><<B><x-nlu-name><x-color><x-nlu-name>AI Kernel</x-nlu-name></x-color></x-nlu-name><</B><<DD><<P>
<<UL>
<<LI>Web site: 
<<A HREF="<x-nlu-url><x-color><x-nlu-url>http://aikernel.sourceforge.net/</x-nlu-url></x-color></x-nlu-url>">aikernel.sourceforge.net<</A><</LI>
<<LI>Sourceforge site: 
<<A HREF="<x-nlu-url><x-color><x-nlu-url>http://sourceforge.net/projects/aikernel/</x-nlu-url></x-color></x-nlu-url>">sourceforge.net/projects/aikernel/<</A><</LI>
<</UL>
<</P>
<x-nlu-description><<P><x-nlu-description><x-color>The AI Kernel is a re-usable artificial intelligence engine that uses
natural language processing and an Activator / Context model to allow
multi tasking between installed cells.</x-color></x-nlu-description><</P></x-nlu-description>

<<P>
<<A NAME="AI Search II"><</A>  <</P>
<<DT><<B><x-nlu-name><x-color><x-nlu-name>AI Search II</x-nlu-name></x-color></x-nlu-name><</B><<DD><<P>
<<UL>
<<LI>WEB site: 
<<A HREF="<x-nlu-url><x-color><x-nlu-url>http://www.neiu.edu/~kwtracy/ooai-book/</x-nlu-url>">http://www.neiu.edu/~kwtracy/ooai-book/</x-color></x-nlu-url><</A><</LI>
<</UL>
<</P>
<x-nlu-description><<P><x-nlu-description><x-color>Basically, the library offers the programmer a set of search
algorithms that may be used to solve all kind of different
problems. The idea is that when developing problem solving software
the programmer should be able to concentrate on the representation of
the problem to be solved and should not need to bother with the
implementation of the search algorithm that will be used to actually
conduct the search. This idea has been realized by the implementation
of a set of search classes that may be incorporated in other software
through <<B>C++<</B>'s features of derivation and inheritance.  The
following search algorithms have been implemented:<</P>

<<P>
<<UL>
<<LI>depth-first tree and graph search.<</LI>
<<LI>breadth-first tree and graph search.<</LI>
<<LI>uniform-cost tree and graph search.<</LI>
<<LI>best-first search.<</LI>
<<LI>bidirectional depth-first tree and graph search.<</LI>
<<LI>bidirectional breadth-first tree and graph search.<</LI>
<<LI>AND/OR depth tree search.<</LI>
<<LI>AND/OR breadth tree search.<</LI>
<</UL>
<</P>

<<P>This library has a corresponding book, "
<<A HREF="http://www.neiu.edu/~kwtracy/ooai-book/">Object-Oriented Artificial Intelligence, Using C++<</A>".</x-color></x-nlu-description><</P></x-nlu-description>

<<P>
<<A NAME="Alchemy"><</A> <</P>
<<DT><<B><x-nlu-name>Alchemy</x-nlu-name><</B><<DD><<P>
<<UL>
<<LI>Web site: 
<<A HREF="<x-nlu-url>http://alchemy.cs.washington.edu/</x-nlu-url>">http://alchemy.cs.washington.edu/<</A><</LI>
<</UL>
<</P>
<x-nlu-description><<P>Alchemy is a software package providing a series of algorithms for
statistical relational learning and probabilistic logic inference,
based on the Markov logic representation. Alchemy allows you to easily
develop a wide range of AI applications, including:<</P>
<<P>
<<UL>
<<LI>Collective classification<</LI>
<<LI>Link prediction<</LI>
<<LI>Entity resolution<</LI>
<<LI>Social network modeling<</LI>
<<LI>Information extraction<</LI>
<</UL>
<</P></x-nlu-description>

<<P>
